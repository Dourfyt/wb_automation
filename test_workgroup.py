#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—á–µ–π –≥—Ä—É–ø–ø—ã –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤
"""

import asyncio
import json
import aiohttp
from printer.printer_manager import PrinterManager

async def test_workgroup_functionality():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—á–µ–π –≥—Ä—É–ø–ø—ã"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—á–µ–π –≥—Ä—É–ø–ø—ã –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤
    printer_manager = PrinterManager()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–∏–Ω—Ç–µ—Ä—ã
    print("\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤...")
    system_printers = await printer_manager.get_system_printers()
    print(f"–ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤: {len(system_printers)}")
    
    for printer in system_printers:
        print(f"  - {printer['name']} ({printer['type']})")
    
    if not system_printers:
        print("‚ùå –ü—Ä–∏–Ω—Ç–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ")
        return
    
    # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–∏–Ω—Ç–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_printer = system_printers[0]['name']
    print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º: {test_printer}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ä–∞–±–æ—á—É—é –≥—Ä—É–ø–ø—É
    print("\n‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–∞ –≤ —Ä–∞–±–æ—á—É—é –≥—Ä—É–ø–ø—É...")
    success = await printer_manager.add_printer_to_workgroup(test_printer, "wb_print_group")
    if success:
        print("‚úÖ –ü—Ä–∏–Ω—Ç–µ—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–∏–Ω—Ç–µ—Ä–∞ –≤ –≥—Ä—É–ø–ø—É")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –∏–∑ –≥—Ä—É–ø–ø—ã
    print("\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –∏–∑ —Ä–∞–±–æ—á–µ–π –≥—Ä—É–ø–ø—ã...")
    workgroup_printers = await printer_manager.get_workgroup_printers("wb_print_group")
    print(f"–ü—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –≤ –≥—Ä—É–ø–ø–µ: {len(workgroup_printers)}")
    
    for printer in workgroup_printers:
        print(f"  - {printer['name']} ({printer['type']})")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã
    print("\n‚ûñ –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–∞ –∏–∑ —Ä–∞–±–æ—á–µ–π –≥—Ä—É–ø–ø—ã...")
    success = await printer_manager.remove_printer_from_workgroup(test_printer, "wb_print_group")
    if success:
        print("‚úÖ –ü—Ä–∏–Ω—Ç–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–∏–Ω—Ç–µ—Ä–∞ –∏–∑ –≥—Ä—É–ø–ø—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥—Ä—É–ø–ø–∞ –ø—É—Å—Ç–∞
    workgroup_printers = await printer_manager.get_workgroup_printers("wb_print_group")
    print(f"–ü—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –≤ –≥—Ä—É–ø–ø–µ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {len(workgroup_printers)}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

async def test_web_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-API"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-API...")
    
    base_url = "http://localhost:8000"
    
    try:
        async with aiohttp.ClientSession() as session:
            # –ü–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–∏–Ω—Ç–µ—Ä—ã
            async with session.get(f"{base_url}/api/system/printers") as response:
                if response.status == 200:
                    data = await response.json()
                    printers = data["printers"]
                    print(f"‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã—Ö –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤: {len(printers)}")
                    
                    if printers:
                        test_printer = printers[0]["name"]
                        print(f"üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º: {test_printer}")
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–Ω—Ç–µ—Ä –≤ –≥—Ä—É–ø–ø—É
                        data = {
                            "name": test_printer,
                            "workgroup": "wb_print_group"
                        }
                        
                        async with session.post(
                            f"{base_url}/api/workgroup/printers/add",
                            json=data
                        ) as response:
                            if response.status == 200:
                                print("‚úÖ –ü—Ä–∏–Ω—Ç–µ—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É —á–µ—Ä–µ–∑ API")
                            else:
                                error_text = await response.text()
                                print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status} - {error_text}")
                        
                        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–Ω—Ç–µ—Ä—ã –∏–∑ –≥—Ä—É–ø–ø—ã
                        async with session.get(f"{base_url}/api/workgroup/printers") as response:
                            if response.status == 200:
                                data = await response.json()
                                workgroup_printers = data["printers"]
                                print(f"‚úÖ –ü—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –≤ –≥—Ä—É–ø–ø–µ: {len(workgroup_printers)}")
                            else:
                                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã: {response.status}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤: {response.status}")
                    
    except aiohttp.ClientConnectorError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ä–∞–±–æ—á–µ–π –≥—Ä—É–ø–ø—ã –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –≤–µ–±-API
    asyncio.run(test_workgroup_functionality())
    asyncio.run(test_web_api()) 