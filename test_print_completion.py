#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—á–∞—Ç–∏
"""

import asyncio
import subprocess
from printer.printer_manager import PrinterManager

async def test_printer_status():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–∞...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–Ω—Ç–µ—Ä—ã –∏–∑ —Ä–∞–±–æ—á–µ–π –≥—Ä—É–ø–ø—ã
    manager = PrinterManager()
    workgroup_printers = await manager.get_workgroup_printers("wb_print_group")
    
    if not workgroup_printers:
        print("‚ùå –ù–µ—Ç –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –≤ —Ä–∞–±–æ—á–µ–π –≥—Ä—É–ø–ø–µ")
        return
    
    printer_name = workgroup_printers[0]["name"]
    print(f"üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–Ω—Ç–µ—Ä: {printer_name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    cmd = [
        "powershell", 
        "-Command", 
        f"Get-Printer -Name '{printer_name}' | Select-Object Name, PrinterStatus, DriverName | ConvertTo-Json"
    ]
    
    try:
        result = subprocess.run(cmd, capture_output=True, text=True, timeout=10)
        
        if result.returncode == 0:
            import json
            printer_info = json.loads(result.stdout)
            print(f"üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–Ω—Ç–µ—Ä–µ:")
            print(f"  –ò–º—è: {printer_info.get('Name', 'N/A')}")
            print(f"  –°—Ç–∞—Ç—É—Å: {printer_info.get('PrinterStatus', 'N/A')}")
            print(f"  –î—Ä–∞–π–≤–µ—Ä: {printer_info.get('DriverName', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result.stderr}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def test_print_job_monitoring():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–¥–∞–Ω–∏–π –ø–µ—á–∞—Ç–∏"""
    print("\nüñ®Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–¥–∞–Ω–∏–π –ø–µ—á–∞—Ç–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–Ω—Ç–µ—Ä—ã –∏–∑ —Ä–∞–±–æ—á–µ–π –≥—Ä—É–ø–ø—ã
    manager = PrinterManager()
    workgroup_printers = await manager.get_workgroup_printers("wb_print_group")
    
    if not workgroup_printers:
        print("‚ùå –ù–µ—Ç –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –≤ —Ä–∞–±–æ—á–µ–π –≥—Ä—É–ø–ø–µ")
        return
    
    printer_name = workgroup_printers[0]["name"]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞–Ω–∏—è –ø–µ—á–∞—Ç–∏
    cmd = [
        "powershell", 
        "-Command", 
        f"Get-PrintJob -PrinterName '{printer_name}' | Select-Object JobId, Document, JobStatus, SubmittedTime | ConvertTo-Json"
    ]
    
    try:
        result = subprocess.run(cmd, capture_output=True, text=True, timeout=10)
        
        if result.returncode == 0:
            import json
            jobs_data = result.stdout.strip()
            
            if jobs_data:
                if jobs_data.startswith('['):
                    jobs = json.loads(jobs_data)
                else:
                    jobs = [json.loads(jobs_data)]
                
                print(f"üìã –ó–∞–¥–∞–Ω–∏–π –ø–µ—á–∞—Ç–∏: {len(jobs)}")
                for job in jobs:
                    print(f"  ID: {job.get('JobId', 'N/A')}")
                    print(f"  –î–æ–∫—É–º–µ–Ω—Ç: {job.get('Document', 'N/A')}")
                    print(f"  –°—Ç–∞—Ç—É—Å: {job.get('JobStatus', 'N/A')}")
                    print(f"  –í—Ä–µ–º—è: {job.get('SubmittedTime', 'N/A')}")
                    print("  ---")
            else:
                print("üìã –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –ø–µ—á–∞—Ç–∏")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π: {result.stderr}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_printer_status())
    asyncio.run(test_print_job_monitoring()) 