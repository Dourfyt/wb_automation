#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á
"""

import asyncio
import json
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(str(Path(__file__).parent))

from printer.add_to_print import PrintQueueManager

async def test_delete_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á...")
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –æ—á–µ—Ä–µ–¥–∏
    queue_manager = PrintQueueManager()
    await queue_manager.connect()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
    order_data = {
        "id": "test_order_delete",
        "article": "test-article-delete"
    }
    
    print("üìã –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É...")
    task_id = await queue_manager.add_to_queue("for_print/test-article-001/–ü–ï–ß–ê–¢–¨.png", order_data)
    print(f"‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {task_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –≤ –æ—á–µ—Ä–µ–¥–∏
    tasks = await queue_manager.redis.zrange("print_queue", 0, -1)
    print(f"üìã –ó–∞–¥–∞—á –≤ –æ—á–µ—Ä–µ–¥–∏: {len(tasks)}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
    print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É: {task_id}")
    removed = await queue_manager.remove_task(task_id)
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è: {removed}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞
    tasks_after = await queue_manager.redis.zrange("print_queue", 0, -1)
    print(f"üìã –ó–∞–¥–∞—á –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {len(tasks_after)}")
    
    if len(tasks_after) == 0:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω - –∑–∞–¥–∞—á–∞ –Ω–µ —É–¥–∞–ª–µ–Ω–∞")

if __name__ == "__main__":
    asyncio.run(test_delete_api()) 